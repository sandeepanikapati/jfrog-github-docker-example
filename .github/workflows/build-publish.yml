name: build-publish-scan
on:
    push:
        branches:
         main
permissions:
  actions: read # for detecting the Github Actions environment.
  id-token: write # for creating OIDC tokens for signing
  packages: write # for uploading attestations.
  contents: read
jobs:
    build-publish-python:
        runs-on: ubuntu-latest              
        env:
          DOCKER_REPO: 'codeninjas-proj-docker-local'
          IMAGE_NAME: 'my-very-cool-image:${{ github.run_number }}'
          JF_URL: https://${{ vars.JF_URL }}/
          DOCKER_CLI_EXPERIMENTAL: enabled
        steps:
            # Use the specific setup-cli branch
            - name: Setup JFrog CLI
              uses: jfrog/setup-jfrog-cli@v3
              env:  
                JF_URL: ${{ secrets.JF_URL }}
              with:
                oidc-provider-name: san-git-intergation
                oidc-audience: jfrog-github
           
            - name: Checkout the repository
              uses: actions/checkout@v4
            - name: Get id token
              env:
                OIDC_AUDIENCE: ${{ secrets.JFROG_OIDC_AUDIENCE }}
                run: |
                     ID_TOKEN=$(curl -sLS -H "User-Agent: actions/oidc-client" -H "Authorization: Bearer $ACTIONS_ID_TOKEN_REQUEST_TOKEN" "${ACTIONS_ID_TOKEN_REQUEST_URL}&audience=${OIDC_AUDIENCE}" | jq '.value' | tr -d '"')
                     echo "ID_TOKEN=${ID_TOKEN}" >> $GITHUB_ENV
            - name: Exchange token with access
              env:
                JF_URL: ${{ vars.JFROG_URL }}
                ID_TOKEN: ${{env.ID_TOKEN}}
                OIDC_PROVIDER: ${{ secrets.JFROG_OIDC_PROVIDER_NAME }}
                run: |
                    ACCESS_TOKEN=$(curl -X POST \
                        -H "Content-Type: application/json" \
                        "https://michaelsus.jfrog.io/access/api/v1/oidc/token" \
                        -d "{\"grant_type\": \"urn:ietf:params:oauth:grant-type:token-exchange\", \"subject_token_type\":\"urn:ietf:params:oauth:token-type:id_token\", \"subject_token\": \"${ID_TOKEN}\", \"provider_name\": \"${OIDC_PROVIDER}\"}" \
                      | jq .access_token | tr -d '"')
                    echo "ACCESS_TOKEN=${ACCESS_TOKEN}" >> $GITHUB_ENV
                      
            - name: Set up QEMU
              uses: docker/setup-qemu-action@v3                 

            - name: Authenticate Docker
              uses: docker/login-action@v3
              env:
                OIDC_PROVIDER: ${{ secrets.JFROG_OIDC_PROVIDER_NAME }}
                OIDC_AUDIENCE: ${{ secrets.JFROG_OIDC_AUDIENCE }}
                ACCESS_TOKEN: ${{ env.ACCESS_TOKEN }}

            - name: docker build through 
              run: |  
                docker login --username sandeepa incloudmaster.jfrog.io --password ${{ env.ACCESS_TOKEN }}
                
            - name: docker pull
              run: |  
                 docker pull incloudmaster.jfrog.io/vj-docker-remote/ubuntu


